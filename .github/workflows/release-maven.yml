name: Release Maven

on:
  push:
    branches:
      - master

permissions:
  contents: write

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout ${{ github.ref_name }}
        uses: actions/checkout@v4
        with:
          fetch-depth: '0'
          token: ${{ secrets.INTEGRATE_TOKEN }}

      - name: Get Change Type
        id: change-type
        shell: bash
        run: |
          change_type=$(git log -1 --merges --oneline | grep -Pio "\b(major|minor|patch|hotfix)(?=\/)")
          echo "type=$change_type" >> $GITHUB_OUTPUT

      - name: Get Current Version
        id: current-version
        shell: bash
        run: |
          pom="./xqlite-java/pom.xml"
          current_version=$(python ./xqlite-java/get_version.py $pom)
          echo "current_version=$current_version" >> $GITHUB_OUTPUT

      - name: Bump Version
        id: semver
        shell: bash
        run: |
          new_version=$(python ./bump_version.py ${{ steps.current-version.outputs.current_version }} ${{ steps.change-type.outputs.type }})
          echo "version=$new_version" >> $GITHUB_OUTPUT

      - name: Set Version
        shell: bash
        run: |
          pom="./xqlite-java/pom.xml"
          python ./xqlite-java/set_version.py $pom ${{ steps.semver.outputs.version }}

      - name: Render settings.xml with GitHub secrets
        shell: bash
        run: |
          export MAVEN_USERNAME=plycos
          export MAVEN_TOKEN=${{ secrets.REGISTRY_TOKEN }}
          envsubst < ./xqlite-java/settings.xml > ./xqlite-java/maven-settings.xml

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Deploy to XQLite Registry
        uses: docker/build-push-action@v6
        with:
          push: false
          context: './xqlite-java'
          file: './xqlite-java/Dockerfile.build'
          target: 'deploy'
          secret-files: |
            "MAVEN_SETTINGS=./xqlite-java/maven-settings.xml"
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Set Git User
        shell: bash
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"

      - name: Commit Bumped Version
        if: success()
        shell: bash
        run: |
          git add ./xqlite-java/pom.xml
          git commit -m "[skip ci] Bump to version $version"

      - name: Push Commit
        if: success()
        shell: bash
        run: git push origin HEAD:master --force
